<div class="card mt-2">
    <div class="card-header">
        <h3 class="card-title">Add/Edit MachineVoucher</h3>
    </div>
    <div class="card-body">
        <form action="#" class="needs-validation" id="voucherform" method="post" novalidate>
            <div class="row mb-3">
                <div class="col-md-4 col-sm-12">
                    <label class="{{#unless voucher.MV_VoucherType }}required {{/unless}}form-label" for="MV_VoucherType">Voucher Type</label>
                    <input type="hidden" id="MV_VoucherType" name="MV_VoucherType" {{#if voucher}}value="{{voucher.MV_VoucherType}}"{{/if}} />
                    <select class="form-control{{#if voucher}} d-none{{/if}}" id="voucherTypeBox" {{#if voucher}}disabled{{else}}required{{/if}} onchange="showVocherValueInput()">
                        <option value="" disabled selected>Please select</option>
                        <option value="valueoff">ValueOff</option>
                        <option value="stockcode">StockCode</option>
                        <option value="debitaccount">DebitAccount</option>
                        <option value="percentoff">PercentOff</option>
                    </select>
                </div>
                <div class="col-md-4 col-sm-12">
                    <label class="{{#unless voucher.MV_MachineID }}required {{/unless}}form-label" for="MV_MachineID">
                        MachineID
                    </label>
                    <select class="form-control" id="MV_MachineID" name="MV_MachineID" onchange="showVocherValueInput()" {{#if voucher}}disabled{{/if}}>
                        <option value="" disabled selected>Please select</option>
                        {{#each machineList}}
                            {{#unless ../voucher}}
                                <option value="{{ this.M_MachineID }}">[{{ this.M_MachineID }}] - {{ this.M_Name }} - ({{ this.type.machineTypeID }}: {{ this.type.name }})</option>
                            {{else}}
                                    <option value="{{this.M_MachineID}}" {{#ifCond ../voucher.MV_MachineID '===' this.M_MachineID}}selected{{/ifCond}}>[{{ this.M_MachineID }}] - {{ this.M_Name }} - ({{ this.type.machineTypeID }}: {{ this.type.name }})</option>
                            {{/unless}}
                            
                        {{/each}}
                    </select>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="float-start w-75">
                        <label class="{{#unless voucher.MV_VoucherCode }}required {{/unless}}form-label" for="MV_VoucherCode">QR Code</label>
                        <input class="form-control {{#if voucher.MV_VoucherCode }}no-validate{{/if}}" type="text" id="MV_VoucherCode" name="MV_VoucherCode" {{#if voucher }}value="{{ voucher.MV_VoucherCode }}" disabled{{else}}onfocus="showGenerateBtn()" required{{/if}}  />
                    </div>
                    {{#unless voucher}}
                        <div class="w-25 d-flex align-items-center" style="height:100%"><button class="btn btn-outline-dark ms-2 mt-3 d-none" type="button" id="generateCodeBtn" onclick="generateVoucherCode()">Generate VoucherCode</button></div>
                    {{/unless}}
                </div>
            </div>
            <div class="mb-3">
                <div class="{{#unless voucher}}d-none{{/unless}}" id="voucherValueInput">
                    <div class="row">
                        <div class="col-md-4 col-sm-6">
                            <label for="voucherValue" class="form-label">Value</label>
                            <input type="text" class="form-control" name="voucherValue" id="voucherValue" {{#if voucher}}value="{{voucher.voucherValue}}" disabled{{/if}} />
                        </div>
                        <div class="col-md-4 col-sm-6">
                            <label for="VoucherData" class="form-label"></label>
                            <div id="VoucherData" class="mt-2{{#ifCond voucher.MV_VoucherType '==' 'stockcode'}} d-none{{/ifCond}}">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input border border-white" type="radio" name="IsConsume" id="IsConsumeValue" value="IsConsumeValue" {{#if voucher.MV_VoucherData.IsConsumeValue }}checked{{/if}} {{#if voucher.MV_VoucherData }}disabled{{/if}} />
                                    <label for="IsConsumeValue" class="form-check-label">IsConsumeValue</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input border border-white" type="radio" name="IsConsume" id="IsConsumeBalance" value="IsConsumeBalance" {{#if voucher.MV_VoucherData.IsConsumeBalance }}checked{{/if}} {{#if voucher.MV_VoucherData }}disabled{{/if}} />
                                    <label for="IsConsumeValue" class="form-check-label">IsConsumeBalance</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="{{#ifCond voucher.voucherType '!=' 'stockcode'}}d-none{{/ifCond}} w-50" id="voucherValueSelect">
                    <label for="voucherValue" class="form-label">StockCode</label>
                    <select class="form-control" name="voucherValue" id="voucherValue"></select>  
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-5 col-sm-12">
                    <label for="MV_Balance" class="form-label {{#unless voucher}}required{{/unless}}">Balance</label>
                    <input type="number" min="1" class="form-control" name="MV_Balance" id="MV_Balance" {{#if voucher}}value="{{voucher.MV_Balance}}" disabled{{else}}required{{/if}} />
                </div>
                <div class="col-md-5 col-sm-12">
                    <label for="validDate" class="form-label {{#unless voucher}}required{{/unless}}">Valid Period</label>
                    <input type="hidden" name="validPeriod" id="validPeriod"{{#if voucher}}value="{{voucher.MV_DateFrom}},{{voucher.MV_DateTo}}"{{/if}} />
                    <input type="text" id="validDate" {{#unless voucher}}class="form-control" required{{else}}class="form-control d-none" disabled{{/unless}} />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4 col-sm-12">
                    <label for="MV_Remark" class="form-label">Remark</label>
                    <textarea class="form-control" id="MV_Remark" name="MV_Remark" {{#if voucher}}value="{{voucher.MV_Remark}}" disabled{{/if}}></textarea>
                </div>
            </div>
        </form>
    </div>
    <div class="card-footer">
        {{#if voucher}}
            <div id="activateControls" class="me-4 mb-2">
                <div class="float-end">
                    <a href="javascript:void(0);" class="btn btn-primary me-1" onclick="enableForm()"><i class="fas fa-pencil me-1"></i>編輯</a>
                    <a class="btn btn-outline-dark" href="/voucher"><i class="fas fa-chevron-left me-1"></i>返回</a> 
                </div>
            </div>
            <div id="deactivateControls" class="{{#if voucher}}d-none{{/if}} me-4 mb-2">
                <div class="float-end">
                    <a id="saveBtn" class="btn btn-success ms-2" href="javascript:void(0);" ><i class="fas fa-floppy-disk me-1"></i>儲存</a>
                    <a id="cancelBtn" class="btn btn-secondary ms-2" href="javascript:void(0);" ><i class="fas fa-xmark me-1"></i>取消</a> 
                </div>
            </div>
        {{else}}
            <div class="float-end">
                <a id="saveBtn" class="btn btn-success ms-2" href="#" onclick="saveVoucher(event)"><i class="fas fa-floppy-disk me-1"></i>儲存</a>
                <a id="cancelBtn" class="btn btn-secondary ms-2" href="javascript:void(0);" ><i class="fas fa-xmark me-1"></i>取消</a> 
                <a class="btn btn-outline-dark ms-2" href="/voucher"><i class="fas fa-chevron-left me-1"></i>返回</a> 
            </div>    
        {{/if}}
    </div>
</div>
{{>scripts }}
<script>
    const saveVoucher = (event) => {
        clearFormValidation('voucherform');
        const validPeriodInput = document.querySelector('#validPeriod');
        if(!validPeriodInput.value){
            const rangeValue = document.querySelector('#validDate').value.replace(' to ', ',');
            validPeriodInput.value = rangeValue;
        }
        const formData = getFormData('voucherform');
        if(!formData) {
            return false;
        }
        const dateRange = formData['validPeriod'].split(',');
        formData['MV_DateFrom'] = dateRange[0];
        formData['MV_DateTo'] = dateRange[1];
        let voucherData = {};
        if(formData['MV_VoucherType'] === 'valueoff' || formData['MV_VoucherType'] === 'percentoff') {
            voucherData['Value'] = isNaN(formData['voucherValue']) ? 0 : parseInt(formData['voucherValue']);
        } else if (formData['MV_VoucherType'] === 'stockcode') {
            voucherData['StockCode'] = formData['voucherValue'];
        } else {
            voucherData['RemainValue'] = isNaN(formData['voucherValue']) ? 0 : parseInt(formData['voucherValue']);
        }
        if(formData['MV_VoucherType'] !== 'stockcode'){
            voucherData['IsConsumeValue'] = formData['IsConsume'] === 'IsConsumeValue' ? 1 : 0;
            voucherData['IsConsumeBalance'] = formData['IsConsume'] === 'IsConsumeBalance' ? 1 : 0;
        }
        formData['MV_VoucherData'] = voucherData;
        delete formData['validPeriod'];
        delete formData['voucherValue'];
        delete formData['IsConsume'];
        fetch('/voucher/save', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then((response) => response.json())
        .then((data) => {
            console.log(data);
            if(data)
        })
        .catch(error => {
            console.log(error)
        })
        event.preventDefault();
    }
    const enableForm = () => {
        const controls = [...document.querySelectorAll('input'), document.querySelector('select'), document.querySelector('textarea')];
        controls.every((el, index) =>{
            const name = el.getAttribute('name');
            if(name !== 'MV_MachineID' && name !== 'MV_VoucherCode') {
                el.disabled = false;
            }
            return el;
        })
    }
    const backToList = () => {
        history.go(-1);
    }
    const generateVoucherCode = () => {
        const machineID = document.querySelector('#MV_MachineID').value;
        const voucherType = document.querySelector('#voucherTypeBox').value;
        let prefix='';
        switch(voucherType) {
            case 'valueoff':
            prefix = 'VO';
            break;
            case 'stockcode':
            prefix = 'SC';
            break;
            case 'debitaccount':
            prefix = 'DA';
            break;
            case 'percentoff':
            prefix = 'PO';
            break;
            default:
            break;
        }
        const voucherCode = `${machineID}${prefix}${Math.random().toString(32).substring(2,9).toUpperCase()}`;
        document.querySelector('#MV_VoucherCode').value = voucherCode;
    }
    const showGenerateBtn = () => {
        document.querySelector('#generateCodeBtn').classList.remove('d-none');
    }

    const getStockList = (machineId) => {
        const params = {
            machineId: machineId
        }
        fetch('/machine/stock-list', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(params)
        })
        .then(response => response.json())
        .then(data => {
            const selectBox = document.querySelector('select[name=voucherValue]');
            const options = data.map(d => {
                let optionTag;
                if(voucherValue.value && voucherValue.value === d.MS_StockCode)  {
                    console.log('voucherValue.value')
                    optionTag = `<option value="${d.MS_StockCode}" selected>`
                } else {
                    optionTag = `<option value="${d.MS_StockCode}">`
                }
                return `${optionTag}[${d.MS_StockCode}] ${d.MS_StockName}</option>`
            });
            selectBox.innerHTML = 
                '<option disabled>Please select</option>' + 
                options
            
            document.querySelector('#voucherValueSelect').classList.remove('d-none');
        })
    }
    const showVocherValueInput = () => {
        const machineId = document.querySelector('#MV_MachineID').value;
        const voucherType = document.querySelector('#voucherTypeBox').value;
        const voucherValueInput = document.querySelector('#voucherValueInput');
        const voucherValueSelect = document.querySelector('#voucherValueSelect');
        voucherValueInput.classList.add('d-none');
        voucherValueSelect.classList.add('d-none');

        if(!machineId || !voucherType){
            return false;
        }
        if(voucherType === 'stockcode') {
            getStockList(machineId);
        } else {
            voucherValueSelect.classList.add('d-none');
            document.querySelector('#voucherValueInput input').disabled = false;
            voucherValueInput.classList.remove('d-none');
            document.querySelector('#VoucherData').classList.remove('d-none');
        }
        
        //document.querySelector('#MV_VoucherCode').disabled = false;
    }
    
    document.addEventListener('DOMContentLoaded', () => {
        const fp = flatpickr("#validDate", {
            mode: "range",
            dateFormat: 'd-m-Y',
            onClose: (selectedDates, dateStr, instance) => {
                const dateFrom = selectedDates[0];
                const dateTo = selectedDates[1];
                if(dateFns.differenceInDays(dateTo, dateFrom) === 0){
                    alert('invalid date range');
                    return false;
                } else {
                    document.querySelector('#validPeriod').value = `${dateFns.format(dateFrom, 'dd-MM-yyyy')},${dateFns.format(dateTo, 'dd-MM-yyyy')}`
                }
                
            }
        });
        formControlsAttr('voucherform');
        const selectedVoucherType = document.querySelector('#MV_VoucherType');
        const validPeriodInput = document.querySelector('#validPeriod');
        if(selectedVoucherType) {
            document.querySelector('#voucherTypeBox').value = selectedVoucherType.value;
            document.querySelector('#voucherTypeBox').classList.remove('d-none');
        }
        if(validPeriodInput.value){
            const validPeriod = validPeriodInput.value.split(',').map((date) =>new Date(date));
            fp.setDate(validPeriod);
            document.querySelector('#validDate').classList.remove('d-none')
        } else {
            fp.setDate([new Date(), dateFns.addYears(new Date(), 1)])
        }
        document.querySelector('#voucherTypeBox').addEventListener('change', (event) =>{
            document.querySelector('#MV_VoucherType').value = document.querySelector('#voucherTypeBox').value;
        })
    })
</script>
