<!-- Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">修改密碼</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm">
                    <div class="mb-1">
                        <label class="form-label required me-2" for="oldPassword">舊密碼</label>
                        <input class="form-control" type="text" id="oldPassword" name="oldPassword" required />
                    </div>
                    <div class="mb-1">
                        <label class="form-label required me-2" for="newPassword">新密碼</label>
                        <input class="form-control" type="text" id="newPassword" name="newPassword" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="submitbtn" onclick="submitPassword()">儲存</button>
            </div>
        </div>
    </div>
</div>

<script>
    submitPassword = () => {
        
        const ownerId = document.querySelector('#ON_OwnerID').value;
        clearFormValidation('changePasswordForm')
        const formData = getFormData('changePasswordForm');
        
        if(formData) {
            if(formData.oldPassword === formData.newPassword) {
                alert('old password and new password are the same');
                return false;
            }
            formData['ownerId'] = ownerId;
        }        
        fetch('change-password',{
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then((response) => {
            if(response.status === 200) {
                return response.json();
            } else {
                [...document.querySelectorAll('#changePasswordModal input')].every((el, index) => {
                    el.parentElement.classList.remove('was-validated');
                    el.classList.remove('is-valid');
                    el.classList.add('is-invalid')
                    return el
                })
                return { message: response.statusText }
            }
        })
        .then((data) => {
            const newDiv = document.createElement('p');
            const newContent = document.createTextNode(data.message);
            newDiv.appendChild(newContent);
            newDiv.classList.add(data.message.indexOf('success') !== -1 ? 'text-success' : 'text-danger');
            document.querySelector('#changePasswordForm').appendChild(newDiv);
        }) 
    }
    document.addEventListener('DOMContentLoaded', () => {
        var changePasswordModal = document.querySelector('#changePasswordModal');
        var modalInstance = bootstrap.Modal.getOrCreateInstance(changePasswordModal);
        changePasswordModal.addEventListener('hide.bs.modal', function (event) {
            clearFormValidation('changePasswordForm');
            [...document.querySelectorAll('#changePasswordForm input')].every((el, index) => {
                el.value = null;
                return el;
            })
        })
    })
</script>